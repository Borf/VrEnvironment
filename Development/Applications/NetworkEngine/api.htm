<style>
body
{
	font-family: tahoma;
}
.code
{
    display: block;
    font-family: monospace;
    white-space: pre;
    margin: 1em 0;
    border: 1px solid black;	
}

.call
{
	margin-bottom: 100px;
	margin-top: 20px;
	margin-left: 5px;
	padding-left: 5px;
	border-left: 10px solid black;
	display: block;
}

.container
{
	overflow: auto;
}
h1
{
	text-align: center;
}

</style>
<ul>
	<li>scene
	<ul>
		<li><a href="#scene/get">scene/get</a></li>
		<li><a href="#scene/save">scene/save</a></li>
		<li><a href="#scene/load">scene/load</a></li>
		<li><a href="#scene/raycast">scene/raycast</a></li>
		<li>node<ul>
			<li><a href="#scene/node/add">scene/node/add</a></li>
			<li><a href="#scene/node/moveto">scene/node/moveto</a></li>
			<li><a href="#scene/node/update">scene/node/update</a></li>
			<li><a href="#scene/node/delete">scene/node/delete</a></li>
			<li><a href="#scene/node/addlayer">scene/node/addlayer</a></li>
			<li><a href="#scene/node/dellayer">scene/node/dellayer</a></li>
		</ul></li>
		<li>terrain<ul>
			<li><a href="#scene/terrain/add">scene/terrain/add</a></li>
			<li><a href="#scene/terrain/update">scene/terrain/update</a></li>
			<li><a href="#scene/terrain/delete">scene/terrain/delete</a></li>
			<li><a href="#scene/terrain/getheight">scene/terrain/getheight</a></li>
		</ul></li>
		<li>skybox<ul>
			<li><a href="#scene/skybox/settime">scene/skybox/settime</a></li>
			<li><a href="#scene/skybox/update">scene/skybox/update</a></li>
		</ul></li>	
		<li>road<ul>
			<li><a href="#scene/road/add">scene/road/add</a></li>
			<li><a href="#scene/road/delete">scene/road/delete</a></li>
		</ul></li>	
	</ul></li>
	<li>route
	<ul>
		<li><a href="#route/add">route/add</a></li>
		<li><a href="#route/update">route/update</a></li>
		<li><a href="#route/delete">route/delete</a></li>
	</ul></li>
	<li><a href="#play">play</a></li>
	<li><a href="#pause">pause</a></li>
</ul>


<div class="container">

	<h1>scene</h1>

	<div class="call" id="scene/get">
		<h2>scene/get</h2>
		gets a json structure of the scene
<div class="code">{
	"id" : "scene/get"
}
</div>
		Response
<div class="code">{
	"status" : "ok",
	"data" : {scene data}
}</div>
		Errors:
		<ul>
			<li></li>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->


	<div class="call" id="scene/save">
		<h2>scene/save</h2>
		saves the scene to a file. filename parameter indicates the filename, overwrite indicates if the file should be overwritten. if overwrite is not specified, or is false, the file will not be overwritten but an error will be returned
<div class="code">{
	"id" : "scene/save",
	"data" :
	{
		"filename" : "cookie.json",
		"overwrite" : false
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
			<li>File Exists: The file exists and the overwrite flag is set to false</li>
			<li>Error saving: an unspecified error occurred while saving (disk full, file in use)</li>
		</ul>
	</div>

<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->

	<div class="call" id="scene/load">
		<h2>scene/load</h2>
		loads the scene from a file
<div class="code">{
	"id" : "scene/load",
	"data" :
	{
		"filename" : "cookie.json"
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
			<li>File does not exist: Could not find the file with the filename specified</li>
			<li>Invalid file: the file is not a valid scene file</li>
		</ul>
	</div>



	<div class="call" id="scene/raycast">
		<h2>scene/raycast</h2>
		Casts a ray through the scene, and returns an array of collision points. Physics indicate if the ray should be cast by the physics engine or by the internal polygon structure (slower)
<div class="code">{
	"id" : "scene/raycast",
	"data" : 
	{
		"start" : [ 0, 0, 0 ],
		"direction" : [ 0, 1, 0 ],
		"physics" : true
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok",
	"data" :
	[
		[ 0, 0.4, 0 ],
		[ 0, 0.6, 0 ],
		[ 0, 1.4, 0 ],
		[ 0, 1.6, 0 ]
	]
}</div>
		Errors:
		<ul>
		</ul>
	</div>

<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->

<h1>scene/node</h1>

	<div class="call" id="scene/node/add">
		<h2>scene/node/add</h2>
		Adds a node to the scene. Returns the guid of the newly created node
<div class="code">{
	"id" : "scene/node/add",
	"data" : 
	{
		"parent" : {guid},
		"components" :
		{
			"transform" : 
			{
				"position" : [ 0, 0, 0 ],
				"scale" : [ 1, 1, 1 ],
				"rotation" : [ 0, 0, 0 ],
			},
			"model" : 
			{
				"filename" : {filename},
				"cullbackfaces" : true,
				"animated" : false,
			}
			"terrain" : 
			{
				"smoothnormals" : true
			}
		}
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok",
	"data" :
	{
		"id" : {guid}
	}
}</div>
		Errors:
		<ul>
		</ul>
	</div>

<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->


	<div class="call" id="scene/node/update">
		<h2>scene/node/update</h2>

<div class="code">{
	"id" : "scene/node/update",
	"data" :
	{
		"id" : {guid}
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->


	<div class="call" id="scene/node/moveto">
		<h2>scene/node/moveto</h2>

<div class="code">{
	"id" : "scene/node/moveto",
	"data" :
	{
		"id" : {guid}
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->

	<div class="call" id="scene/node/delete">
		<h2>scene/node/delete</h2>

<div class="code">{
	"id" : "scene/node/delete",
	"data" :
	{
		"id" : {guid}
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->
	<div class="call" id="scene/node/addlayer">
		<h2>scene/node/addlayer</h2>
		Adds a texture layer on top of a terrain. The texture is repeated over the terrain, and is only visible between heights between minHeight and maxHeight. After those heights the texture fades out after fadeDist distance
<div class="code">{
	"id" : "scene/node/addlayer",
	"data" :
	{
		"id" : {uuid},
		"diffuse" : {texture.png},
		"normal" : {texture.png},
		"minHeight" : 0,
		"maxHeight" : 10,
		"fadeDist" : 1
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->


	<div class="call" id="scene/node/dellayer">
		<h2>scene/node/dellayer</h2>

<div class="code">{
	"id" : "scene/node/dellayer",
	"data" :
	{
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->



<h1>scene/terrain</h1>

	<div class="call" id="scene/terrain/add">
		<h2>scene/terrain/add</h2>

<div class="code">{
	"id" : "scene/terrain/add",
	"data" :
	{
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->


	<div class="call" id="scene/terrain/update">
		<h2>scene/terrain/update</h2>

<div class="code">{
	"id" : "scene/terrain/update",
	"data" :
	{
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->


	<div class="call" id="scene/terrain/delete">
		<h2>scene/terrain/delete</h2>

<div class="code">{
	"id" : "scene/terrain/delete",
	"data" :
	{
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->


	<div class="call" id="scene/terrain/getheight">
		<h2>scene/terrain/getheight</h2>

<div class="code">{
	"id" : "scene/terrain/getheight",
	"data" :
	{
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->
<h1>scene/skybox</h1>

	<div class="call" id="scene/skybox/settime">
		<h2>scene/skybox/settime</h2>

<div class="code">{
	"id" : "scene/skybox/settime",
	"data" :
	{
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->

	<div class="call" id="scene/skybox/update">
		<h2>scene/skybox/update</h2>

<div class="code">{
	"id" : "scene/skybox/update",
	"data" :
	{
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->
<h1>scene/road</h1>


	<div class="call" id="scene/road/add">
		<h2>scene/road/add</h2>

<div class="code">{
	"id" : "scene/road/add",
	"data" :
	{
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->


	<div class="call" id="scene/road/delete">
		<h2>scene/road/delete</h2>

<div class="code">{
	"id" : "scene/road/delete",
	"data" :
	{
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->
<h1>route</h1>

	<div class="call" id="route/add">
		<h2>route/add</h2>

<div class="code">{
	"id" : "route/add",
	"data" :
	{
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->

	<div class="call" id="route/update">
		<h2>route/update</h2>

<div class="code">{
	"id" : "route/update",
	"data" :
	{
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->

	<div class="call" id="route/delete">
		<h2>route/delete</h2>

<div class="code">{
	"id" : "route/delete",
	"data" :
	{
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->

	<div class="call" id="play">
		<h2>play</h2>

<div class="code">{
	"id" : "play",
	"data" :
	{
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->

	<div class="call" id="pause">
		<h2>pause</h2>

<div class="code">{
	"id" : "pause",
	"data" :
	{
	}
}
</div>
		Response
<div class="code">{
	"status" : "ok"
}</div>
		Errors:
		<ul>
		</ul>
	</div>


<!-- ---------------------------------------------------------------------------------------------------------------------------------------------- -->






</div>